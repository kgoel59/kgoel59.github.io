<!doctype html> <html lang="en"> <head> <meta name="google-site-verification" content="572CpV_LTBRfv5HZ0v-VN2J6r6cZE--b8udH0_fg1Jo"> <meta name="msvalidate.01" content=""> <meta http-equiv="Permissions-Policy" content="interest-cohort=()"> <meta charset="utf-8"> <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no"> <meta http-equiv="X-UA-Compatible" content="IE=edge"> <title> Crypto Week 3 | Karan Goel </title> <meta name="author" content="Karan Goel"> <meta name="description" content="Introduction"> <link rel="stylesheet" href="/assets/css/bootstrap.min.css?a4b3f509e79c54a512b890d73235ef04"> <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/mdbootstrap@4.20.0/css/mdb.min.css" integrity="sha256-jpjYvU3G3N6nrrBwXJoVEYI/0zw8htfFnhT9ljN3JJw=" crossorigin="anonymous"> <link defer rel="stylesheet" href="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.css"> <link rel="stylesheet" href="/assets/css/academicons.min.css?f0b7046b84e425c55f3463ac249818f5"> <link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Roboto+Slab:100,300,400,500,700|Material+Icons"> <link rel="stylesheet" href="/assets/css/jekyll-pygments-themes-github.css?591dab5a4e56573bf4ef7fd332894c99" media="" id="highlight_theme_light"> <link rel="shortcut icon" href="/assets/img/favicon.ico?acbd3e65a6723e88b5535b00becb6b4d"> <link rel="stylesheet" href="/assets/css/main.css?d41d8cd98f00b204e9800998ecf8427e"> <link rel="canonical" href="https://karangoel59.com/raw_notes/2024-08-15-crypto-week7.txt"> <link rel="stylesheet" href="/assets/css/jekyll-pygments-themes-native.css?5847e5ed4a4568527aa6cfab446049ca" media="none" id="highlight_theme_dark"> <script src="/assets/js/theme.js?bf50d6d9dd867d3e0f3b0add94449649"></script> </head> <body class="fixed-top-nav "> <header> <nav id="navbar" class="navbar navbar-light navbar-expand-sm fixed-top" role="navigation"> <div class="container"> <a class="navbar-brand title font-weight-lighter" href="/"> <span class="font-weight-bold">Karan&nbsp;</span> Goel </a> <button class="navbar-toggler collapsed ml-auto" type="button" data-toggle="collapse" data-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar top-bar"></span> <span class="icon-bar middle-bar"></span> <span class="icon-bar bottom-bar"></span> </button> <div class="collapse navbar-collapse text-right" id="navbarNav"> <ul class="navbar-nav ml-auto flex-nowrap"> <li class="nav-item "> <a class="nav-link" href="/">about </a> </li> <li class="nav-item "> <a class="nav-link" href="/blog/">blog </a> </li> <li class="nav-item "> <a class="nav-link" href="/cv/">cv </a> </li> <li class="toggle-container"> <button id="light-toggle" title="Change theme"> <i class="fa-solid fa-moon"></i> <i class="fa-solid fa-sun"></i> </button> </li> </ul> </div> </div> </nav> <progress id="progress" value="0"> <div class="progress-container"> <span class="progress-bar"></span> </div> </progress> </header> <div class="container mt-5" role="main"> <div class="post"> <header class="post-header"> <h1 class="post-title">Crypto Week 3</h1> <p class="post-meta"> June 24, 2024 </p> <p class="post-tags"> <i class="fa-solid fa-calendar fa-sm"></i> 2024 &nbsp; &middot; &nbsp; <i class="fa-solid fa-hashtag fa-sm"></i> projects learning uow &nbsp; &nbsp; &middot; &nbsp; <i class="fa-solid fa-tag fa-sm"></i> learning &nbsp; </p> </header> <article class="post-content"> <div id="markdown-content"> Digital Signature • Correctness: For all generated (pk,sk) and all S←Sign(sk, M), we have Pr[Verify(S,M,pk)=1]=1 Adversary’s capability – Known tag attack: The adversary knows some messages and the associated tags for them. – Chosen Message Attack: Attacker is allowed to choose some messages, and receives the corresponding tags However, in blind signature, anyone can get the signature without revealing the message… • Can we force the adversary to reveal the message to the challenger? • Yes we can define like this, but in the applications, the conditions may not be satisfied…. • The problem is solved by requiring the adversary to give q+1 different sigantures if it has made q queries. • The definition is good enough for main applications of blind signature, such as electronic cash or electronic voting. Unforgeability of Blind Signature (Electronic vote, cash) Any user can vote for one and can only get one signature Attacker need q+1 queries which is good enough Privacy of Blind signature • Who should be the adversary for privacy? • The signer! • Our goal is to prevent the singer from knowing any information about the message it has been signed. • How to define the privacy? Can we define the message indistinguishability following INDCPA security of PKE? • That means, the signer (adversary) selects two messages; the challenger runs the signing protocol with the signer (adversary) using one of them. • But this security definition cannot prevent the signer from “marking” you when running the protocol with you, i.e., it may produce a signature that is different from the usual ones and then it can detect you when you use your signature. The attack does not conflict with the security definition. • How to define the privacy? • We allow the signer (adversary) to choose many messages; then the challenger runs the signing protocol with the signer (adversary) using these messages, but in a shuffled order. • The adversary’s goal is to match the signing sessions with the messages. • We are not going to show the formal definition The key generation and the verification algorithm is unchanged. • KeyGen: • Generate primes P and Q, compute N = PQ • Generate d and e such that de = 1 mod (P-1)(Q-1) • Public Key (N, e) • Private Key (N,d) • Verify: • Input a message M and a signature S • Check Se = H(M) mod N • We transform the signing algorithm into a 3-step protocol • Message masking (by requester): • Choose a random value r • Compute m = H(M) • Compute B = rem mod N • Send B to the signer • Signing (by signer): • Signer computes C = Bd mod N • Signer sends C back to the requester • Signature Extracting (by requester): • The requester computes S = C/r mod N • S is a valid signature for M r^ed = r^key • Correctness • C = Bd mod N = (rem)d mod N = r de md mod N = rmd mod N • C/r = md mod N = H(M)d mod N • Unforgeability • Unforgeability comes from unforgeability of RSA signature • It is possible to generate signature on messages that are not queried! • But the attacker can create at most n valid message/signature pairs if he has asked the signer to sign for n times. • Privacy • Unconditional privacy (One time pad) Adversory can use m1 and m2 mesaage block to get m1.m2 sign for two queries he can get 1 sign but he need two to break the scheme PCK from DL Abelian Group • A Group is a set of objects together with an operation defined between any two objects in the set. • Let G denote a set and • denote an operation • (G, •) is an Abelian group if all the following conditions are met: • Closure • Associative • Commutative • Identity • Inverse example = Z*q • Let Z*5 ∗ be the set {1, 2, 3, 4} • Consider the operator x mod 5 • (Z*5, x mod 5) is group Cyclic Group • Let (G, ·) be a finite group of order q. For arbitrary g ∈ G, consider the set 〈g〉 = { g0 , g1 , . . . } • (〈g〉 , ·) is a cyclic group with order p=| 〈g〉 | and g is a generator of (〈g〉 , · Hard Problems in Cyclic Groups • The Discrete Logarithm Problem (DLP) Given a cyclic group G of order q, a generator g in G, and a group element h in G, find the unique non-negative number a<q such that h = g a . • The Computational Diffie-Hellman Problem Given a cyclic group G of order q, a generator g in G, and two group elements g a and g b ,find g ab. • The Decisional Diffie-Hellman Problem Given a cyclic group G of order q, a generator g in G, and two group elements g a and g b , distinguish g ab from a random group element </div> </article> <div id="giscus_thread" style="max-width: 800px; margin: 0 auto;"> <script>let giscusTheme=localStorage.getItem("theme"),giscusAttributes={src:"https://giscus.app/client.js","data-repo":"kgoel59/kgoel59.github.io","data-repo-id":"R_kgDOLGCvFA","data-category":"Q&A","data-category-id":"DIC_kwDOLGCvFM4CcfRJ","data-mapping":"title","data-strict":"1","data-reactions-enabled":"1","data-emit-metadata":"0","data-input-position":"bottom","data-theme":giscusTheme,"data-lang":"en",crossorigin:"anonymous",async:""},giscusScript=document.createElement("script");Object.entries(giscusAttributes).forEach(([t,e])=>giscusScript.setAttribute(t,e)),document.getElementById("giscus_thread").appendChild(giscusScript);</script> <noscript>Please enable JavaScript to view the <a href="http://giscus.app/?ref_noscript">comments powered by giscus.</a></noscript> </div> </div> </div> <footer class="fixed-bottom" role="contentinfo"> <div class="container mt-0"> &copy; Copyright 2024 Karan Goel. Powered by <a href="https://jekyllrb.com/" target="_blank">Jekyll</a> with <a href="https://github.com/alshedivat/al-folio">al-folio</a> theme. Hosted by <a href="https://pages.github.com/" target="_blank">GitHub Pages</a>. Last updated: November 02, 2024. </div> </footer> <script src="https://cdn.jsdelivr.net/npm/jquery@3.6.0/dist/jquery.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script> <script src="/assets/js/bootstrap.bundle.min.js"></script> <script src="https://cdn.jsdelivr.net/npm/mdbootstrap@4.20.0/js/mdb.min.js" integrity="sha256-NdbiivsvWt7VYCt6hYNT3h/th9vSTL4EDWeGs5SN3DA=" crossorigin="anonymous"></script> <script defer src="https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js" integrity="sha256-Nn1q/fx0H7SNLZMQ5Hw5JLaTRZp0yILA/FRexe19VdI=" crossorigin="anonymous"></script> <script defer src="https://cdn.jsdelivr.net/npm/imagesloaded@4/imagesloaded.pkgd.min.js"></script> <script defer src="/assets/js/masonry.js" type="text/javascript"></script> <script type="text/javascript">$(function(){$('[data-toggle="tooltip"]').tooltip()});</script> <script defer src="https://cdn.jsdelivr.net/npm/medium-zoom@1.0.8/dist/medium-zoom.min.js" integrity="sha256-7PhEpEWEW0XXQ0k6kQrPKwuoIomz8R8IYyuU1Qew4P8=" crossorigin="anonymous"></script> <script defer src="/assets/js/zoom.js?85ddb88934d28b74e78031fd54cf8308"></script> <script defer src="https://unpkg.com/bootstrap-table@1.22.1/dist/bootstrap-table.min.js"></script> <script src="/assets/js/no_defer.js?2930004b8d7fcd0a8e00fdcfc8fc9f24"></script> <script defer src="/assets/js/common.js?4a129fbf39254905f505c7246e641eaf"></script> <script defer src="/assets/js/copy_code.js?7254ae07fe9cc5f3a10843e1c0817c9c" type="text/javascript"></script> <script async src="https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js"></script> <script async src="https://badge.dimensions.ai/badge.js"></script> <script type="text/javascript">window.MathJax={tex:{tags:"ams"}};</script> <script defer type="text/javascript" id="MathJax-script" src="https://cdn.jsdelivr.net/npm/mathjax@3.2.0/es5/tex-mml-chtml.js"></script> <script defer src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script> <script async src="https://www.googletagmanager.com/gtag/js?id=G-M3ERZCHGHH"></script> <script>function gtag(){window.dataLayer.push(arguments)}window.dataLayer=window.dataLayer||[],gtag("js",new Date),gtag("config","G-M3ERZCHGHH");</script> <script type="text/javascript">function progressBarSetup(){"max"in document.createElement("progress")?(initializeProgressElement(),$(document).on("scroll",function(){progressBar.attr({value:getCurrentScrollPosition()})}),$(window).on("resize",initializeProgressElement)):(resizeProgressBar(),$(document).on("scroll",resizeProgressBar),$(window).on("resize",resizeProgressBar))}function getCurrentScrollPosition(){return $(window).scrollTop()}function initializeProgressElement(){let e=$("#navbar").outerHeight(!0);$("body").css({"padding-top":e}),$("progress-container").css({"padding-top":e}),progressBar.css({top:e}),progressBar.attr({max:getDistanceToScroll(),value:getCurrentScrollPosition()})}function getDistanceToScroll(){return $(document).height()-$(window).height()}function resizeProgressBar(){progressBar.css({width:getWidthPercentage()+"%"})}function getWidthPercentage(){return getCurrentScrollPosition()/getDistanceToScroll()*100}const progressBar=$("#progress");window.onload=function(){setTimeout(progressBarSetup,50)};</script> </body> </html>